{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst btn = document.querySelector(\"button[data-start]\");\n\nbtn.setAttribute('disabled', 'true');\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      console.log(selectedDates[0]);\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      btn.setAttribute(\"disabled\", \"true\");\n    } else {\n      btn.removeAttribute(\"disabled\");\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n  document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n  document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n  document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nlet timerId = null;\n\nbtn.addEventListener(\"click\", () => {\n  btn.setAttribute(\"disabled\", \"true\");\n  input.setAttribute(\"disabled\", \"true\");\n\n  timerId = setInterval(() => {\n    const timeLeft = userSelectedDate - new Date();\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      input.removeAttribute(\"disabled\");\n      return;\n    }\n\n    updateTimerUI(convertMs(timeLeft));\n  }, 1000);\n});"],"names":["input","btn","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","updateTimerUI","addLeadingZero","value","timerId","timeLeft"],"mappings":"+IAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,oBAAoB,EAEvDA,EAAI,aAAa,WAAY,MAAM,EAEnC,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAE1BF,GAAoB,IAAI,MAC1BG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDJ,EAAI,aAAa,WAAY,MAAM,GAEnCA,EAAI,gBAAgB,UAAU,CAEjC,CACH,EAEAK,EAAUN,EAAOG,CAAO,EAExB,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAc,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC/E,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,IAAIC,EAAU,KAEdf,EAAI,iBAAiB,QAAS,IAAM,CAClCA,EAAI,aAAa,WAAY,MAAM,EACnCD,EAAM,aAAa,WAAY,MAAM,EAErCgB,EAAU,YAAY,IAAM,CAC1B,MAAMC,EAAWf,EAAmB,IAAI,KAExC,GAAIe,GAAY,EAAG,CACjB,cAAcD,CAAO,EACrBhB,EAAM,gBAAgB,UAAU,EAChC,MACD,CAEDa,EAAcN,EAAUU,CAAQ,CAAC,CAClC,EAAE,GAAI,CACT,CAAC"}